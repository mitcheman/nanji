type Post
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete, update, read] }
      { allow: owner, ownerField: "friends", operations: [read] }
    ]
  ) {
  id: ID!
  location: String
  date: AWSDate!
  content: String!
  image: String!
  type: String!
    @index(
      name: "postByDate"
      queryField: "postByDate"
      sortKeyFields: ["date"]
    )
  userID: ID!
    @index(
      name: "postByUser"
      queryField: "postByUser"
      sortKeyFields: ["date"]
    )
}

type User
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete, update, read] }
      { allow: owner, ownerField: "friends", operations: [read] }
    ]
  )
  @searchable {
  id: ID! @auth(rules: [{ allow: private, operations: [read] }])
  family_name: String! @auth(rules: [{ allow: private, operations: [read] }])
  given_name: String! @auth(rules: [{ allow: private, operations: [read] }])
  preferred_username: String!
    @auth(rules: [{ allow: private, operations: [read] }])
  profile_pic: String @auth(rules: [{ allow: private, operations: [read] }])
  posts: [Post] @hasMany(indexName: "postByUser", fields: ["id"])
  friends: [String]
    @auth(
      rules: [
        { allow: owner, ownerField: "friends", operations: [read] }
        {
          allow: owner
          ownerField: "incoming_friend_requests"
          operations: [read]
        }
      ]
    )
  outgoing_friend_requests: [String]
  incoming_friend_requests: [String]
    @auth(rules: [{ allow: private, operations: [create] }])
}
