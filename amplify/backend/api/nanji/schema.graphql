type Post @model @auth(rules: [{ allow: private }]) {
  id: ID!
  location: String
  date: AWSDate!
  content: String!
  image: String!
  type: String!
    @index(
      name: "postByDate"
      queryField: "postByDate"
      sortKeyFields: ["date"]
    )
  userID: ID!
    @index(
      name: "postByUser"
      queryField: "postByUser"
      sortKeyFields: ["date"]
    )
}

type User @model @auth(rules: [{ allow: private }]) @searchable {
  id: ID!
  family_name: String!
  given_name: String!
  preferred_username: String
  profile_pic: String
  posts: [Post] @hasMany(indexName: "postByUser", fields: ["id"])
  friends: [Friend] @hasMany
  outgoing_friend_requests: [OutgoingFriendRequest] @hasMany
  incoming_friend_requests: [IncomingFriendRequest] @hasMany
}

type Friend @model @auth(rules: [{ allow: private }]) {
  id: ID!
  friend_with: String!
  owner: String
}

type OutgoingFriendRequest @model @auth(rules: [{ allow: private }]) {
  id: ID!
  request_to: String!
}

type IncomingFriendRequest @model @auth(rules: [{ allow: private }]) {
  id: ID!
  request_from: String!
}
